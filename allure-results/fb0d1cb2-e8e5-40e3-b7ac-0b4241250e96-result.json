{"name": "OrangeHRM Login By Parametrized method Test Case", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".oxd-userdropdown-tab\"}\n  (Session info: chrome=115.0.5790.171); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF695294A62+57106]\n\t(No symbol) [0x00007FF69520CF52]\n\t(No symbol) [0x00007FF6950DE2CB]\n\t(No symbol) [0x00007FF69511786E]\n\t(No symbol) [0x00007FF69511795C]\n\t(No symbol) [0x00007FF695150477]\n\t(No symbol) [0x00007FF6951369FF]\n\t(No symbol) [0x00007FF69514E522]\n\t(No symbol) [0x00007FF695136793]\n\t(No symbol) [0x00007FF69510CE81]\n\t(No symbol) [0x00007FF69510E064]\n\tGetHandleVerifier [0x00007FF695544222+2873042]\n\tGetHandleVerifier [0x00007FF695596590+3209792]\n\tGetHandleVerifier [0x00007FF69558F3AF+3180639]\n\tGetHandleVerifier [0x00007FF695325F25+652245]\n\t(No symbol) [0x00007FF695218618]\n\t(No symbol) [0x00007FF6952147C4]\n\t(No symbol) [0x00007FF6952148BC]\n\t(No symbol) [0x00007FF695204C33]\n\tBaseThreadInitThunk [0x00007FFE9CE67614+20]\n\tRtlUserThreadStart [0x00007FFE9E7626B1+33]", "trace": "self = <testcases.test_orangehrm_login.Test_Orangehrm_Login object at 0x000001ADB61D3490>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84d23bae65290086f5572e9175950995\")>\nget_data_for_login = ('Admin123', 'admin123')\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.link(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n    @allure.title(\"OrangeHRM Login By Parametrized method Test Case\")\n    @allure.issue(\"ABC123\")\n    @allure.story(\"This is story\")\n    # @pytest.mark.only\n    def  test_orangehrm_login_parameterized(self,setup,get_data_for_login):\n        self.driver = setup\n        self.log.info(\"Open browser\")\n        self.olp = Orangehrm_Login(self.driver)\n        self.olp.Enter_Username(get_data_for_login[0])\n        self.log.info(f\"enter username: {get_data_for_login[0]}\")\n        self.olp.Enter_password(get_data_for_login[1])\n        self.log.info(f\"Enter password: {get_data_for_login[1]}\")\n        self.olp.Login_Button()\n        self.log.info(\"click login button\")\n        time.sleep(2)\n        allure.attach(self.driver.get_screenshot_as_png(), name=f\"{get_data_for_login[0]}_{get_data_for_login[1]}\",\n                      attachment_type=AttachmentType.PNG)\n>       self.olp.Menu()\n\ntestcases\\test_orangehrm_login.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobjects\\orangehrm_page.py:40: in Menu\n    self.driver.find_element(*Orangehrm_Login.click_menu_css).click()\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001ADB6211810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF695204C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE9CE67614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE9E7626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".oxd-userdropdown-tab\"}\nE         (Session info: chrome=115.0.5790.171); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF695294A62+57106]\nE       \t(No symbol) [0x00007FF69520CF52]\nE       \t(No symbol) [0x00007FF6950DE2CB]\nE       \t(No symbol) [0x00007FF69511786E]\nE       \t(No symbol) [0x00007FF69511795C]\nE       \t(No symbol) [0x00007FF695150477]\nE       \t(No symbol) [0x00007FF6951369FF]\nE       \t(No symbol) [0x00007FF69514E522]\nE       \t(No symbol) [0x00007FF695136793]\nE       \t(No symbol) [0x00007FF69510CE81]\nE       \t(No symbol) [0x00007FF69510E064]\nE       \tGetHandleVerifier [0x00007FF695544222+2873042]\nE       \tGetHandleVerifier [0x00007FF695596590+3209792]\nE       \tGetHandleVerifier [0x00007FF69558F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF695325F25+652245]\nE       \t(No symbol) [0x00007FF695218618]\nE       \t(No symbol) [0x00007FF6952147C4]\nE       \t(No symbol) [0x00007FF6952148BC]\nE       \t(No symbol) [0x00007FF695204C33]\nE       \tBaseThreadInitThunk [0x00007FFE9CE67614+20]\nE       \tRtlUserThreadStart [0x00007FFE9E7626B1+33]\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "Admin123_admin123", "source": "fff0014f-b852-4e83-b132-6c3f69b7da25-attachment.png", "type": "image/png"}, {"name": "log", "source": "b021fd6d-0707-43d6-9cfa-c791a835ce88-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_data_for_login", "value": "('Admin123', 'admin123')"}], "start": 1691680030962, "stop": 1691680044442, "uuid": "2ecc6a77-b88a-4b90-aba6-853e3b1a7660", "historyId": "431f565bd740bf382be471f2e2602b54", "testCaseId": "4aba9617ff3d278a3bdf98d11ffff4d1", "fullName": "testcases.test_orangehrm_login.Test_Orangehrm_Login#test_orangehrm_login_parameterized", "labels": [{"name": "severity", "value": "normal"}, {"name": "story", "value": "This is story"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_orangehrm_login"}, {"name": "subSuite", "value": "Test_Orangehrm_Login"}, {"name": "host", "value": "DESKTOP-3IIDO4U"}, {"name": "thread", "value": "1812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_orangehrm_login"}], "links": [{"type": "issue", "url": "ABC123", "name": "ABC123"}, {"type": "link", "url": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login", "name": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login"}]}